<div class="mb-8">
    <h1 class="text-2xl font-bold text-gray-900 mb-2">Tableau de bord</h1>
    <p class="text-gray-600">Bienvenue, <%= user.firstName %> <%= user.lastName %></p>
</div>

<!-- Stats Cards -->
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <div class="bg-white rounded-xl shadow-sm p-6 card-hover transition duration-300">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-gray-500 text-sm">Projets en cours</p>
                <h3 class="text-2xl font-bold mt-2"><%= stats.activeProjects %></h3>
                <p class="text-<%= stats.projectsChange >= 0 ? 'green' : 'red' %>-500 text-xs mt-2">
                    <i class="fas fa-<%= stats.projectsChange >= 0 ? 'arrow-up' : 'arrow-down' %> mr-1"></i>
                    <%= Math.abs(stats.projectsChange) %>% par rapport au mois dernier
                </p>
            </div>
            <div class="w-12 h-12 rounded-full bg-purple-100 flex items-center justify-center text-purple-600">
                <i class="fas fa-project-diagram"></i>
            </div>
        </div>
    </div>

    <div class="bg-white rounded-xl shadow-sm p-6 card-hover transition duration-300">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-gray-500 text-sm">Tâches complétées</p>
                <h3 class="text-2xl font-bold mt-2"><%= stats.completedTasks %>/<%= stats.totalTasks %></h3>
                <p class="text-<%= stats.tasksCompletion >= 75 ? 'green' : (stats.tasksCompletion >= 50 ? 'yellow' : 'red') %>-500 text-xs mt-2">
                    <%= stats.tasksCompletion %>% complétées
                </p>
            </div>
            <div class="w-12 h-12 rounded-full bg-blue-100 flex items-center justify-center text-blue-600">
                <i class="fas fa-check-circle"></i>
            </div>
        </div>
    </div>

    <div class="bg-white rounded-xl shadow-sm p-6 card-hover transition duration-300">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-gray-500 text-sm">Revenus ce mois</p>
                <h3 class="text-2xl font-bold mt-2"><%= stats.revenue.toLocaleString('fr-FR') %> €</h3>
                <p class="text-<%= stats.revenueChange >= 0 ? 'green' : 'red' %>-500 text-xs mt-2">
                    <i class="fas fa-<%= stats.revenueChange >= 0 ? 'arrow-up' : 'arrow-down' %> mr-1"></i>
                    <%= Math.abs(stats.revenueChange) %>% par rapport au mois dernier
                </p>
            </div>
            <div class="w-12 h-12 rounded-full bg-green-100 flex items-center justify-center text-green-600">
                <i class="fas fa-euro-sign"></i>
            </div>
        </div>
    </div>

    <div class="bg-white rounded-xl shadow-sm p-6 card-hover transition duration-300">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-gray-500 text-sm">Clients actifs</p>
                <h3 class="text-2xl font-bold mt-2"><%= stats.newClients %></h3>
                <p class="text-<%= stats.clientsChange >= 0 ? 'green' : 'red' %>-500 text-xs mt-2">
                    <i class="fas fa-<%= stats.clientsChange >= 0 ? 'arrow-up' : 'arrow-down' %> mr-1"></i>
                    <%= Math.abs(stats.clientsChange) %>% par rapport au mois dernier
                </p>
            </div>
            <div class="w-12 h-12 rounded-full bg-orange-100 flex items-center justify-center text-orange-600">
                <i class="fas fa-users"></i>
            </div>
        </div>
    </div>
</div>

<!-- Charts Row -->
<div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
    <!-- Revenue Chart -->
    <div class="bg-white rounded-xl shadow-sm p-6">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-lg font-semibold">Revenus mensuels</h2>
            <div class="flex space-x-2">
                <button class="px-3 py-1 text-xs bg-purple-100 text-purple-600 rounded-full">2023</button>
                <button class="px-3 py-1 text-xs bg-gray-100 text-gray-600 rounded-full">2022</button>
            </div>
        </div>
        <div class="h-64">
            <canvas id="revenueChart"></canvas>
        </div>
    </div>

    <!-- Project Status Chart -->
    <div class="bg-white rounded-xl shadow-sm p-6">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-lg font-semibold">Statut des projets</h2>
            <a href="/dashboard/projects" class="text-purple-600 text-sm font-medium">Voir tout</a>
        </div>
        <div class="h-64">
            <canvas id="projectStatusChart"></canvas>
        </div>
    </div>
</div>

<!-- Recent Projects & Tasks -->
<div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
    <!-- Recent Projects -->
    <div class="bg-white rounded-xl shadow-sm p-6">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-lg font-semibold">Projets récents</h2>
            <a href="/dashboard/projects" class="text-purple-600 text-sm font-medium">Voir tout</a>
        </div>
        <div class="space-y-4">
            <% recentProjects.forEach(project => { %>
                <div class="flex items-center justify-between p-3 hover:bg-gray-50 rounded-lg transition duration-200">
                    <div class="flex items-center space-x-3">
                        <div class="w-10 h-10 rounded-full bg-<%=
                            project.status === 'nouveau' ? 'blue' :
                            project.status === 'en cours' ? 'yellow' :
                            project.status === 'en revue' ? 'purple' :
                            project.status === 'terminé' ? 'green' :
                            'red'
                        %>-100 flex items-center justify-center text-<%=
                            project.status === 'nouveau' ? 'blue' :
                            project.status === 'en cours' ? 'yellow' :
                            project.status === 'en revue' ? 'purple' :
                            project.status === 'terminé' ? 'green' :
                            'red'
                        %>-600">
                            <i class="fas fa-<%=
                                project.status === 'nouveau' ? 'file' :
                                project.status === 'en cours' ? 'code' :
                                project.status === 'en revue' ? 'eye' :
                                project.status === 'terminé' ? 'check' :
                                'exclamation-triangle'
                            %>"></i>
                        </div>
                        <div>
                            <h4 class="font-medium"><%= project.name %></h4>
                            <p class="text-xs text-gray-500">Client: <%= project.client.firstName %> <%= project.client.lastName %></p>
                        </div>
                    </div>
                    <span class="px-2 py-1 text-xs rounded-full <%=
                        project.status === 'nouveau' ? 'bg-blue-100 text-blue-800' :
                        project.status === 'en cours' ? 'bg-yellow-100 text-yellow-800' :
                        project.status === 'en revue' ? 'bg-purple-100 text-purple-800' :
                        project.status === 'terminé' ? 'bg-green-100 text-green-800' :
                        'bg-red-100 text-red-800'
                    %>">
                        <%= project.status.charAt(0).toUpperCase() + project.status.slice(1) %>
                    </span>
                </div>
            <% }) %>
        </div>
    </div>

    <!-- Recent Tasks -->
    <div class="bg-white rounded-xl shadow-sm p-6">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-lg font-semibold">Tâches à faire</h2>
            <a href="/dashboard/tasks" class="text-purple-600 text-sm font-medium">Voir tout</a>
        </div>
        <div class="space-y-4">
            <% pendingTasks.forEach(task => { %>
                <div class="flex items-center justify-between p-3 hover:bg-gray-50 rounded-lg transition duration-200">
                    <div class="flex items-center space-x-3">
                        <input type="checkbox" class="rounded text-purple-600">
                        <div>
                            <h4 class="font-medium"><%= task.title %></h4>
                            <p class="text-xs text-gray-500">Projet: <%= task.project.name %> •
                                <% if (task.dueDate) { %>
                                    Échéance: <%= new Date(task.dueDate).toLocaleDateString('fr-FR') %>
                                <% } else { %>
                                    Pas d'échéance
                                <% } %>
                            </p>
                        </div>
                    </div>
                    <span class="px-2 py-1 text-xs rounded-full <%=
                        task.priority === 'basse' ? 'bg-green-100 text-green-800' :
                        task.priority === 'moyenne' ? 'bg-blue-100 text-blue-800' :
                        task.priority === 'haute' ? 'bg-orange-100 text-orange-800' :
                        'bg-red-100 text-red-800'
                    %>">
                        <%= task.priority.charAt(0).toUpperCase() + task.priority.slice(1) %>
                    </span>
                </div>
            <% }) %>
        </div>
    </div>
</div>

<!-- Latest Activities -->
<div class="bg-white rounded-xl shadow-sm p-6 mb-8">
    <div class="flex justify-between items-center mb-6">
        <h2 class="text-lg font-semibold">Dernières activités</h2>
    </div>
    <div class="space-y-4">
        <% activities.forEach(activity => { %>
            <div class="flex items-start p-3 hover:bg-gray-50 rounded-lg transition duration-200">
                <div class="bg-<%=
                    activity.type === 'project' ? 'blue' :
                    activity.type === 'task' ? 'purple' :
                    activity.type === 'payment' ? 'green' :
                    'gray'
                %>-100 w-10 h-10 rounded-full flex items-center justify-center mr-4">
                    <i class="fas fa-<%=
                        activity.type === 'project' ? 'project-diagram' :
                        activity.type === 'task' ? 'tasks' :
                        activity.type === 'payment' ? 'credit-card' :
                        'bell'
                    %> text-<%=
                        activity.type === 'project' ? 'blue' :
                        activity.type === 'task' ? 'purple' :
                        activity.type === 'payment' ? 'green' :
                        'gray'
                    %>-600"></i>
                </div>
                <div>
                    <p class="text-gray-900"><%= activity.message %></p>
                    <p class="text-xs text-gray-500"><%= new Date(activity.date).toLocaleString('fr-FR') %></p>
                </div>
            </div>
        <% }) %>
    </div>
</div>

<style>
    .card-hover:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
    }
    .sidebar {
        transition: all 0.3s ease;
    }
    .sidebar-collapsed {
        width: 80px;
    }
    .sidebar-collapsed .sidebar-text {
        display: none;
    }
    .sidebar-collapsed .logo-text {
        display: none;
    }
    .sidebar-collapsed .nav-item {
        justify-content: center;
    }
    .main-content {
        transition: all 0.3s ease;
    }
    .main-content-expanded {
        margin-left: 280px;
    }
    .main-content-collapsed {
        margin-left: 80px;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Sidebar toggle functionality
        const sidebarToggle = document.getElementById('sidebar-toggle');
        if (sidebarToggle) {
            const sidebar = document.querySelector('.sidebar');
            const mainContent = document.querySelector('.main-content');

            sidebarToggle.addEventListener('click', () => {
                sidebar.classList.toggle('sidebar-collapsed');
                mainContent.classList.toggle('main-content-collapsed');
                mainContent.classList.toggle('main-content-expanded');
            });
        }

        // Revenue Chart
        const revenueCtx = document.getElementById('revenueChart').getContext('2d');
        const revenueChart = new Chart(revenueCtx, {
            type: 'line',
            data: {
                labels: <%= JSON.stringify(charts.revenue.labels) %>,
                datasets: [{
                    label: 'Revenus (€)',
                    data: <%= JSON.stringify(charts.revenue.data) %>,
                    backgroundColor: 'rgba(124, 58, 237, 0.1)',
                    borderColor: 'rgba(124, 58, 237, 1)',
                    borderWidth: 2,
                    tension: 0.4,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            drawBorder: false
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });

        // Project Status Chart
        const projectStatusCtx = document.getElementById('projectStatusChart').getContext('2d');
        const projectStatusChart = new Chart(projectStatusCtx, {
            type: 'doughnut',
            data: {
                labels: ['Terminé', 'En cours', 'En revue', 'Nouveau', 'En attente'],
                datasets: [{
                    data: [
                        <%= recentProjects.filter(p => p.status === 'terminé').length %>,
                        <%= recentProjects.filter(p => p.status === 'en cours').length %>,
                        <%= recentProjects.filter(p => p.status === 'en revue').length %>,
                        <%= recentProjects.filter(p => p.status === 'nouveau').length %>,
                        <%= recentProjects.filter(p => !['terminé', 'en cours', 'en revue', 'nouveau'].includes(p.status)).length %>
                    ],
                    backgroundColor: [
                        'rgba(16, 185, 129, 1)',  // vert
                        'rgba(245, 158, 11, 1)',  // jaune
                        'rgba(124, 58, 237, 1)',  // violet
                        'rgba(59, 130, 246, 1)',  // bleu
                        'rgba(156, 163, 175, 1)'  // gris
                    ],
                    borderWidth: 0
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                cutout: '70%',
                plugins: {
                    legend: {
                        position: 'right',
                    }
                }
            }
        });

        // Task checkboxes
        document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                if (this.checked) {
                    // Ici, vous pourriez ajouter une requête AJAX pour marquer la tâche comme terminée
                    const taskElement = this.closest('.flex.items-center.justify-between');
                    if (taskElement) {
                        taskElement.style.opacity = '0.5';
                        taskElement.style.textDecoration = 'line-through';
                    }
                }
            });
        });
    });
</script>
